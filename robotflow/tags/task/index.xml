<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>task on RobotFlow</title>
    <link>http://mvig.sjtu.edu.cn/robotflow/tags/task/</link>
    <description>Recent content in task on RobotFlow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://mvig.sjtu.edu.cn/robotflow/tags/task/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>当我们在谈论Motion Primitive的时候究竟在谈论什么</title>
      <link>http://mvig.sjtu.edu.cn/robotflow/article/%E5%BD%93%E6%88%91%E4%BB%AC%E5%9C%A8%E8%B0%88%E8%AE%BAmotion-primitive%E7%9A%84%E6%97%B6%E5%80%99%E7%A9%B6%E7%AB%9F%E5%9C%A8%E8%B0%88%E8%AE%BA%E4%BB%80%E4%B9%88/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://mvig.sjtu.edu.cn/robotflow/article/%E5%BD%93%E6%88%91%E4%BB%AC%E5%9C%A8%E8%B0%88%E8%AE%BAmotion-primitive%E7%9A%84%E6%97%B6%E5%80%99%E7%A9%B6%E7%AB%9F%E5%9C%A8%E8%B0%88%E8%AE%BA%E4%BB%80%E4%B9%88/</guid>
      <description>当我们在谈论Motion Primitive的时候究竟在谈论什么 当Author们没有claim自己在做Skill的时候他们在做什么？ 他们在做把skill当成一个个的具体的topic来做，比如grasp，throw，slide，pour water啥的。 以Grasp为例，有关它的可迁移性，有这么几个层次：
  基于共性结构的抓取：不一定要求物体是同一类，可以是（较）deformable的物体，但还没见到能从rigid到highly flexible的物体。
 当共性结构是（相对dense的）几何特征：就是当物体的外形比较相似的时候，那么抓法也应该比较相似。这时给几个example demonstration，它就能抓很多这类的物体。这样的工作很多了。 当共性结构是稀疏的点：那么相似性主要看基于几个关键点连成的拓扑。如下图 此时迁移性取决于物体的结构，首先只能在同一套结构里迁移，一套结构当然不可能处理所有物体的。    基于语义的抓取：
 最coarse的语义是类别，当然这种情况下迁移能力是很弱的，而且就要求必须要先识别出物体来 稍微好一点的是有语义的part segmentation  总的说来，语义和抓取之间没有直接的联系，不过这是抓取这个task的问题，因为抓取本来也没必要有语义。在manipulation中，语义所蕴含（或者来自知识库attach）的功能性还是值得关注的。
  基于抓型相似性的抓取：这个如下图， 因为人手和gripper之间的巨大差异，所以设计一种手持二指gripper，上面装载各种传感器。这样可以减轻human demonstration和机器人grasp之间的gap。从而可以直接处理grasp时的策略（而不是像以前要经过一些间接的表示，比如来自物体的，或者需要把五指的人手投影到二指）。
  当然，还有单做其他的skill的，这里就不一一例举了。为什么有些skill能单独成为一个topic/task，有的只是在文章里顺带做做？ 比如stacking，push，pick-and-place这些通常都是顺带跟着grasping做做。像insert，pour water这些偶尔还会单独成篇。我个人认为，核心原因是背后的动力学不一样，比如insert，最关键的是靠近hole的时候的试探过程。
当Author们claim自己在做Skill的时候他们在做什么？ 当然，也有把skill整个一起看的。这时候他们的论文标题就会带上skill这样的字眼。以一份CMU RI的老师，18年做的一个slide为例，可以看看这一派人对问题的思考。
基本目标：学可复用的Skill  Skill要能反映manipulation task的结构：  把task分解成segments skill负责在segments之间转移 需要high-level的policy来组织这些skills来完成task     对于一个简单的grasp task来说： 我们可以把它分成3个segments，在ppt里叫mode。
 Mode 1：准备阶段 Mode 2：Contact Mode 3：物体离开平面   因此，引入mode这个概念后，就可以定义motor primitive，上面那张图的范式就变成：
 把Demonstration分解成Modes 学motion primitive用于mode之间的转移 优化各个primitive的goal state：  Use learned forward model as simulator Use mode transition distribution to define reward    具体来说，可以用这样的技术来解：</description>
    </item>
    
    <item>
      <title>RobotFlow Task Zoo</title>
      <link>http://mvig.sjtu.edu.cn/robotflow/article/robotflow-task-zoo/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://mvig.sjtu.edu.cn/robotflow/article/robotflow-task-zoo/</guid>
      <description>RobotFlow Task Zoo 本文主要收集主流实验中的manipulation task，并在最后试图让这些task从概念层面总结一下（某种意义上也是meta learning），由此分析出当前task定义的范围和下一步可能的发展。
眼下的manipulation related benchmark tasks总结 主要参考的文章有meta-world, RLBench, surreal
各任务具体的任务描述见文末。
首先，我们先把各benchmark里的task统一地总结起来。
关于各primitive primitive分两种，接触型primitve和运动型primitve。这里假定完成接触型primitive后手指和物体在一定程度上可以认为是相对静止的。
 grasp：接触型，单指“夹”这个动作，grasp有三个参数，一个是approach pose，一个是物体上的抓点，一个是施加的力。仿真问题一般不考虑力，但为了描述完整还是放这儿。决定这三个参数的叫grasp planner。 push：接触型，有三个参数，一个是approach pose，一个是push type（有用指侧推，有用指尖推，也有两指并拢推），一个是力。决定这三个参数的叫push planner。 move：运动型，是指手臂上的运动，无论是带物体还是不带物体。move的轨迹主要来自plan，约束是planner综合当前的可运动空间（避障）和物体的knowledge，以及对task的理解（物体和物体之间的关系对task的作用）考虑的，随着任务越多需要考虑的越复杂，不过这个是planner的问题，对于move来说它只用接受关于trajectory的指令。  reach是所有任务第一步都要做的，所以在动作序列里，除了只做reach操作以外的，都去掉了reach 常见的特殊move轨迹有：  rotate slide hit pour 铲     insert：运动型，这个动作包含peg in hole和hole out peg。理论上如果一切都很准，那么直接move就完事了，但之所以把insert拧出来，是因为解决距离洞口的误差是这个primitive的精髓所在，有点后处理的意思。  单纯任务    动作序列 任务名称 考虑物-物/环境关系     move reach; reach with wall    grasp -&amp;gt; move turn on faucet; turn off faucet;turn dial; pull handle;turn on faucet; turn off faucet;turn dial; pull handle;get coffee; pull handle side;basketball; pull with stick; disassemble nut; hammer;slide plate side; retrieve plate side;pull mug; unplug peg; close window; open window; open door; open drawer;beat the buzz; change clock;hockey; open fridge;open microwave; open oven;open wine bottle; pick and lift;pick up cup; play jenga;pour from cup to cup; scoop with spatula;straghten rope; sweep to dustpan;take umbrella out of umbrella stand; take usb out of computer;turn oven on; turn tap; unplug charger;water plants; wipe desk √   grasp -&amp;gt; move -&amp;gt; release stack; unstack; place onto shelf;pick &amp;amp; place; open box; close box; pick bin; get ice from fridge; meat off grill; meat on grill;move hanger; phone on base;place hanger on rack; put books on bookshelf;put bottle in fridge; put groceries in cupboard;put item in drawer; put knife on chopping board;put money in safe; put plate in colored dish rack;put rubbish in bin; put umbrella in umbrella stand;remove cups; setup checkers;set the table; stack cups; stack wine; take frame off hanger;take lid off saucepan; take item out of drawer;take money out safe; take off weighing scales;take plate off colored dish rack; take toilet roll off stand;weighing scales √   grasp -&amp;gt; move -&amp;gt; insert insert peg side; hang frame on hanger;hannoi square; insert usb in computer;place cups; place shape in shape sorter;plug charger in power supply; put knife in knife block;put toilet roll on stand; √   push -&amp;gt; move sweep; push; push back; press handle side; press handle;press button top; press button;lock door; unlock door; press switch    push -&amp;gt; move push with stick; sweep into hole; push mug; slide plate;soccer; retrieve plate; close drawer; close door; close/open box2;close fridge; close/open grill;close laptop lid; close microwave;lamp off; lamp on;toilet seat down; toilet seat up √    复合任务    任务名称 组合     press button wall reach with wall + press botton   press button top w/ wall reach with wall + press botton top   push with wall push + reach with wall   pick &amp;amp; place w/ wall pick &amp;amp; place + reach with wall   block pyramid stack * N   change channel pick &amp;amp; place + press botton   TV off pick &amp;amp; place + press botton   TV on pick &amp;amp; place + press botton   close door2 close door + press handle side   close jar pick &amp;amp; place + change clock   empty container pick &amp;amp; place * N   empty dishwasher open door + press handle + push back + pick &amp;amp; place   hit ball with queue pull handle + reach   light bulb in pick &amp;amp; place + change clock   light buib out change clock + pick &amp;amp; place   open door2 press handle + open door   open jar change clock + pick &amp;amp; place   open window2 change clock + push   put shoes in box open box2 + pick &amp;amp; place   put tray in oven open oven + pick &amp;amp; place   screw nail insert peg side + change clock   slide cabinet open and place cups open window + pick &amp;amp; place   solve puzzle pick &amp;amp; place * N   take cup out from cabinet open window + pick &amp;amp; place   take shoes out of box open box2 + pick &amp;amp; place   take tray out of oven open oven + pick &amp;amp; place    双手任务    任务名称 左手 右手     bimanual lifting lift lift   bimanual peg-in-hole insert peg side grasp    简评当前设计的benchmark task 如上所述，我把目前的152种benchmark task根据primitive的序列分成6大类，涉及到的primitive只有4种。我们可以从中得到几点启示：</description>
    </item>
    
  </channel>
</rss>